const fs = require("fs");
const path = require("path");
const dbPath = path.join(__dirname, "nameMemory.json");

// ржорзЗржорзЛрж░рж┐ ржлрж╛ржЗрж▓ ржирж╛ ржерж╛ржХрж▓рзЗ рждрзИрж░рж┐ ржХрж░рзЛ
if (!fs.existsSync(dbPath)) fs.writeFileSync(dbPath, JSON.stringify({}, null, 2));

module.exports = {
  config: {
    name: "simsimiAutoReply",
    eventType: ["message"],
    version: "2.0",
    author: "Tanvir",
    description: "SimSimi рж╕рзНржЯрж╛ржЗрж▓ ржЕржЯрзЛ ржирж╛ржо/ржЪрзНржпрж╛ржЯ рж░рж┐ржкрзНрж▓рж╛ржЗ, ржЕржЯрзЛ рж╢рж┐ржЦржмрзЗ ЁЯза",
  },

  onEvent: async function ({ api, event }) {
    try {
      const { body, senderID, threadID } = event;
      if (!body) return;
      const text = body.toLowerCase();

      if (senderID === api.getCurrentUserID()) return;

      // ржбрзЗржЯрж╛ рж▓рзЛржб
      let memory = JSON.parse(fs.readFileSync(dbPath));

      // ржирж╛ржоржЧрзБрж▓рзЛ ржЪрзЗржХ ржХрж░рж╛
      const found = Object.keys(memory).find(name => text.includes(name.toLowerCase()));

      if (found) {
        const replies = memory[found];
        const randomReply = replies[Math.floor(Math.random() * replies.length)];
        api.sendMessage(randomReply, threadID);
      } else {
        // ржпржжрж┐ ржирждрзБржи ржирж╛ржо рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рж╕ржВрж░ржХрзНрж╖ржг
        memory[text] = [
          `${text} ржХрзЗ ржЪрж┐ржирж┐ ржирж╛ ржнрж╛ржЗ, ржХрж┐ржирзНрждрзБ ржПржЦржи ржерзЗржХрзЗ ржЪрж┐ржирзЗ рж░рж╛ржЦрж▓рж╛ржо ЁЯШЕ`,
          `${text}? ржУрж░рзЗ ржнрж╛ржЗ, ржПржЗ ржирж╛ржоржЯрж╛ ржирждрзБржи ржоржирзЗ рж╣ржЪрзНржЫрзЗ ЁЯШП`,
          `${text} ржнрж╛ржЗ ржЖржЬ ржнрж╛рж▓рзЛ ржЖржЫрзЗржи рждрзЛ? ЁЯШЙ`,
        ];
        fs.writeFileSync(dbPath, JSON.stringify(memory, null, 2));
        api.sendMessage(`ржПржЗ ржирж╛ржоржЯрж╛ (${text}) ржоржирзЗ рж░рж╛ржЦрж▓рж╛ржо ржнрж╛ржЗ ЁЯШО`, threadID);
      }
    } catch (e) {
      console.error(e);
    }
  },
};
