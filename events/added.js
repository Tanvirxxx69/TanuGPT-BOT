const axios = require("axios");
const fs = require("fs");
const path = require("path");

// config.json ржерзЗржХрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ index.js ржерзЗржХрзЗ config ржкрж╛ржарж╛рждрзЗ ржкрж╛рж░рзЛ,
// ржмрж╛ require() ржХрж░рзЗ ржирж┐рждрзЗ ржкрж╛рж░рзЛ (ржпржжрж┐ same folder)
// const config = require("../config.json");

module.exports = async function ({ api, event, config }) {
  try {
    // Facebook chat-api / fca-unofficial ржП ржЧрзНрж░рзБржкрзЗ ржЕрзНржпрж╛ржб ржЗржнрзЗржирзНржЯ рж╕рж╛ржзрж╛рж░ржгржд log:subscribe
    const logType = event.logMessageType || event.type || "";

    // addedParticipants ржерж╛ржХрждрзЗ рж╣ржмрзЗ
    const added = (event.addedParticipants || event.logMessageData?.addedParticipants || []);
    if (!added || added.length === 0) return;

    // ржмржЯ ржирж┐ржЬрзЗржЗ ржЕрзНржпрж╛ржб рж╣рзЯрзЗржЫрзЗ ржХрж┐ ржирж╛ ржЪрзЗржХ ржХрж░рзЛ
    const myID = api.getCurrentUserID ? api.getCurrentUserID() : (api.getCurrentUserID && api.getCurrentUserID());
    let botWasAdded = false;
    for (const p of added) {
      // ржмрж┐ржнрж┐ржирзНржи рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржнрж┐ржирзНржи ржлрж░ржорзНржпрж╛ржЯрзЗ ржжрзЗрзЯ тАФ userFbId / userId / id ржЗрждрзНржпрж╛ржжрж┐
      const pid = p.userFbId || p.userID || p.id || p;
      if (!pid) continue;
      if (String(pid) === String(myID)) {
        botWasAdded = true;
        break;
      }
    }
    if (!botWasAdded) return; // ржпржжрж┐ ржмржЯ ржирж╛ рж╣рзЯ, ржХрж┐ржЫрзБ ржирж╛ ржХрж░рзЛ

    // ржПржЦржи Welcome ржорзЗрж╕рзЗржЬ рждрзИрж░рж┐рж░ ржЕржВрж╢
    const ownerName = (config && config.ownerName) || "рждрж╛ржиржнрзАрж░ ржнрж╛ржЗ";
    const helpPrefix = (config && config.prefix) || "/";

    const welcomeText = `рж╕рж╛рж▓рж╛ржо рж╕ржмрж╛ржЗ! ЁЯСЛ\nржЖржорж┐ *${ownerName}* ржПрж░ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓ ржмржЯ тАФ рждрж╛ржиржнрзАрж░ ржнрж╛ржЗрзЯрзЗрж░ ржмржЯ ЁЯдЦ\n\nржпржжрж┐ ржЖржорж╛ржХрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржУ, ржЯрж╛ржЗржк ржХрж░рзЛ:\n${helpPrefix}help\n\nтЮбя╕П ржмржЯрзЗрж░ ржкрзНрж░ржзрж╛ржи ржХрж╛ржЬ: ржирж╛ржорж╛ржЬ рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░, ржЗрж╕рж▓рж╛ржорж┐ржХ ржмрж╛рж░рзНрждрж╛, ржнрж┐ржбрж┐ржУ/ржЗржорзЗржЬ ржЯрзБрж▓рж╕ ржУ ржоржЬрж╛!\n\n*ржирзЛржЯ:* ржПржЗ ржЧрзНрж░рзБржкрзЗ ржПржб ржХрж░рж▓рзЗ ржЖржорж┐ ржЕржЯрзЛржорзЗржЯрж┐ржХ ржХрж┐ржЫрзБ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛рждрзЗ ржкрж╛рж░рж┐ред`;

    // ржкрзНрж░ржержорзЗ ржЯрзЗржХрзНрж╕ржЯ ржкрж╛ржарж╛ржУ
    await api.sendMessage(welcomeText, event.threadID);

    // рждрж╛рж░ржкрж░ config.ownerPics ржерзЗржХрзЗ рззтАУрзиржЯрж┐ ржЫржмрж┐ ржЕрзНржпрж╛ржЯрж╛ржЪ ржХрж░рзЗ ржжрж╛ржУ (ржпржжрж┐ ржерж╛ржХрзЗ)
    try {
      const pics = (config && config.ownerPics) || [];
      if (pics.length > 0) {
        // ржЖржорж░рж╛ ржХржкрж┐ ржХрж░рзЗ рж▓рзЛржХрж╛рж▓ ржлрж╛ржЗрж▓рзЗ ржирж┐рзЯрзЗ рждрж╛рж░ржкрж░ ржкрж╛ржарж╛ржмрзЛ
        const attachments = [];
        for (let i = 0; i < Math.min(3, pics.length); i++) {
          const url = pics[i];
          try {
            const res = await axios.get(url, { responseType: "arraybuffer", timeout: 20000 });
            const filePath = path.join(__dirname, `tmp_owner_${i}_${Date.now()}.jpg`);
            fs.writeFileSync(filePath, Buffer.from(res.data, "binary"));
            attachments.push(fs.createReadStream(filePath));
          } catch (err) {
            console.error("Owner pic download failed:", err.message || err);
          }
        }
        if (attachments.length > 0) {
          // ржЫржмрж┐ рж╕рж╣ ржЖрж░рзЗржХржЯрж┐ ржорзЗрж╕рзЗржЬ
          await api.sendMessage({ body: `ЁЯЦ╝я╕П Owner ржПрж░ ржЫржмрж┐ тАФ`, attachment: attachments }, event.threadID);
          // ржХрзНрж▓рж┐ржи ржЖржк
          for (const a of attachments) {
            try { fs.unlinkSync(a.path); } catch (e) {}
          }
        }
      }
    } catch (err) {
      console.error("Owner pics error:", err);
    }

    // ржЕржкрж╢ржирж╛рж▓: ржЧрзНрж░рзБржкрзЗ рж╕рзНржмрж╛ржЧржд рж╢рзБржирж╢рзНрж░рзБрждрж┐ (voice) ржЪрж╛рж▓рж╛рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржПржЦрж╛ржирзЗ termux-tts / gtts ржерзЗржХрзЗ mp3 ржмрж╛ржирж┐рзЯрзЗ ржкрж╛ржарж╛рждрзЗ ржкрж╛рж░рзЛ
    // ржЙржжрж╛рж╣рж░ржг (commented):
    // const ttsMsg = `ржЖржорж┐ ${ownerName} ржПрж░ ржмржЯ, ржЖржорж╛ржХрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ${helpPrefix}help рж▓рж┐ржЦрзЛ`;
    // create mp3 and send as attachment...

  } catch (err) {
    console.error("subscribe event error:", err);
  }
};
