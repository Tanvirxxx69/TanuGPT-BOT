const axios = require("axios");
const fs = require("fs");
const ytdl = require("@distube/ytdl-core");

module.exports = {
  config: {
    name: "ytmusic",
    aliases: ["yt", "song", "youtube"],
    author: "Tanvir",
    version: "1.0",
    shortDescription: "üéµ ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶•‡ßá‡¶ï‡ßá ‡¶ó‡¶æ‡¶® ‡¶¨‡¶æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°",
    longDescription:
      "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶∏‡ßá‡¶ü‡¶æ‡¶∞ ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¨‡¶æ ‡¶Ö‡¶°‡¶ø‡¶ì ‡¶®‡¶æ‡¶Æ‡¶ø‡ßü‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá üéß",
    category: "media",
  },

  onStart: async function ({ api, event, args }) {
    const query = args.join(" ");
    if (!query)
      return api.sendMessage(
        "üîç ‡¶≠‡¶æ‡¶á, ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ó‡¶æ‡¶® ‡¶¨‡¶æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶æ‡¶ì‡•§ ‡¶Ø‡ßá‡¶Æ‡¶®:\n/ytmusic Maher Zain Medina",
        event.threadID,
        event.messageID
      );

    api.sendMessage(
      `üéß ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: ${query} ... ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßã ‚è≥`,
      event.threadID
    );

    try {
      // üîé Search video
      const searchUrl = `https://yt-search-phi.vercel.app/api/search?q=${encodeURIComponent(
        query
      )}`;
      const { data } = await axios.get(searchUrl);

      if (!data || !data.videos || data.videos.length === 0)
        return api.sendMessage(
          "üòû ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ‡¶≠‡¶æ‡¶á, ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§",
          event.threadID,
          event.messageID
        );

      const video = data.videos[0];
      const videoUrl = video.url;
      const title = video.title;

      const filePath = `${__dirname}/${event.senderID}.mp3`;

      // üé∂ Download audio
      const stream = ytdl(videoUrl, {
        filter: "audioonly",
        quality: "highestaudio",
      });

      const writeStream = fs.createWriteStream(filePath);
      stream.pipe(writeStream);

      writeStream.on("finish", () => {
        api.sendMessage(
          {
            body: `üéµ *${title}*`,
            attachment: fs.createReadStream(filePath),
          },
          event.threadID,
          () => fs.unlinkSync(filePath)
        );
      });
    } catch (error) {
      console.error(error);
      api.sendMessage(
        "‚ùå ‡¶≠‡¶æ‡¶á, ‡¶ó‡¶æ‡¶® ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§",
        event.threadID,
        event.messageID
      );
    }
  },
};
