const axios = require("axios");
const ytdl = require("ytdl-core");
const fs = require("fs");
const path = require("path");

module.exports = {
  config: {
    name: "song",
    aliases: ["music", "audio"],
    author: "Tanvir",
    version: "1.0",
    category: "music",
    shortDescription: "üéµ ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶•‡ßá‡¶ï‡ßá ‡¶ó‡¶æ‡¶® ‡¶∂‡ßÅ‡¶®‡ßÅ‡¶®",
    longDescription: "‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶≤‡ßá ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡ßá ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡¶Æ‡¶§‡ßã ‡¶ó‡¶æ‡¶® ‡¶Ö‡¶°‡¶ø‡¶ì ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶∂‡ßã‡¶®‡¶æ‡¶¨‡ßá‡•§",
    guide: {
      en: "{p}song [‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ]",
    },
  },

  onStart: async function ({ api, event, args }) {
    const query = args.join(" ");
    if (!query)
      return api.sendMessage(
        "üé∂ ‡¶ï‡ßã‡¶® ‡¶ó‡¶æ‡¶® ‡¶∂‡ßÅ‡¶®‡¶§‡ßá ‡¶ö‡¶æ‡¶®? ‡¶Ø‡ßá‡¶Æ‡¶®:\n/song Labonno",
        event.threadID,
        event.messageID
      );

    api.sendMessage(`üîç ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: ${query}...`, event.threadID, event.messageID);

    try {
      // ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö API (‡ß©‡ßü ‡¶™‡¶ï‡ßç‡¶∑)
      const searchUrl = `https://yt-api.eu.org/api/search?q=${encodeURIComponent(query)}`;
      const res = await axios.get(searchUrl);

      if (!res.data || !res.data.data || res.data.data.length === 0)
        return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!", event.threadID);

      const results = res.data.data.slice(0, 5); // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡ß´‡¶ü‡¶æ ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü

      let msg = "üéß ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶ó‡¶æ‡¶® ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®:\n\n";
      results.forEach((song, i) => {
        msg += `${i + 1}. ${song.title}\n`;
      });
      msg += "\nüëâ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¶‡¶ø‡¶® (‡ßß‚Äì‡ß´)";

      api.sendMessage(msg, event.threadID, (err, info) => {
        global.GoatBot.onReply.set(info.messageID, {
          commandName: this.config.name,
          messageID: info.messageID,
          author: event.senderID,
          results,
        });
      });
    } catch (error) {
      console.error(error);
      api.sendMessage("‚ö†Ô∏è ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID);
    }
  },

  onReply: async function ({ api, event, Reply }) {
    const { author, results } = Reply;
    if (event.senderID !== author)
      return api.sendMessage("‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï ‡¶®‡¶æ!", event.threadID);

    const choice = parseInt(event.body);
    if (isNaN(choice) || choice < 1 || choice > results.length)
      return api.sendMessage("‚ùó ‡¶¨‡ßà‡¶ß ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶¶‡¶ø‡¶® (‡ßß‚Äì‡ß´)", event.threadID);

    const selected = results[choice - 1];
    const videoUrl = `https://www.youtube.com/watch?v=${selected.id}`;

    api.sendMessage(`üéµ "${selected.title}" ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‚è≥`, event.threadID);

    try {
      const filePath = path.join(__dirname, `temp_${Date.now()}.mp3`);
      const stream = ytdl(videoUrl, { filter: "audioonly", quality: "highestaudio" });
      const writer = fs.createWriteStream(filePath);
      stream.pipe(writer);

      writer.on("finish", () => {
        api.sendMessage(
          {
            body: `üé∂ ‡¶è‡¶ñ‡¶® ‡¶¨‡¶æ‡¶ú‡¶õ‡ßá: ${selected.title}`,
            attachment: fs.createReadStream(filePath),
          },
          event.threadID,
          () => fs.unlinkSync(filePath)
        );
      });
    } catch (err) {
      console.error(err);
      api.sendMessage("‚ö†Ô∏è ‡¶ó‡¶æ‡¶® ‡¶™‡ßç‡¶≤‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID);
    }
  },
};
