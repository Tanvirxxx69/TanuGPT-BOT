const axios = require("axios");
const fs = require("fs");
const path = require("path");
const Jimp = require("jimp");

module.exports = {
  config: {
    name: "hack",
    aliases: ["hackuser", "prankhack"],
    version: "1.0",
    author: "Tanvir",
    shortDescription: "‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï: ‡¶ï‡¶æ‡¶â‡¶ï‡ßá hack ‡¶ï‡¶∞‡¶æ ‡¶Æ‡¶§‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü (‡¶Æ‡¶ú‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)",
    longDescription: "‡¶ï‡ßá‡¶â /hack @user ‡¶¶‡¶ø‡¶≤‡ßá ‡¶Æ‡¶ú‡¶æ‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶≤‡ßá ‡¶¶‡ßá‡ßü 'account hacked' ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Æ‡¶ø‡¶Æ-‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡ßü‡•§",
    category: "fun",
    guide: "{p}hack @user ‚Äî ‡¶Æ‡¶ú‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï",
  },

  onStart: async function ({ api, event }) {
    try {
      const threadID = event.threadID;
      const mentions = event.mentions || {};
      const mentionedIDs = Object.keys(mentions);

      if (mentionedIDs.length === 0) {
        return api.sendMessage("‚ö†Ô∏è ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá mention ‡¶ï‡¶∞‡ßá ‡¶¨‡¶≤‡ßã ‚Äî ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: /hack @Rahim", threadID);
      }

      const targetID = mentionedIDs[0];

      // ‡¶°‡∞ø‡∞´‡¶≤‡ßç‡¶ü ‡¶ü‡ßá‡¶Æ‡¶™‡ßç‡¶≤‡ßá‡¶ü (‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶ø‡¶ï ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶®‡¶æ ‡¶Ø‡¶æ‡ßü)
      const templateUrl = "https://i.ibb.co/9rQvYqf/hacked-template.png"; // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶ü‡ßá‡¶Æ‡¶™‡ßç‡¶≤‡ßá‡¶ü ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá URL ‡¶¨‡¶¶‡¶≤‡¶æ‡¶ì

      // ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶ø‡¶ï ‡¶®‡ßá‡¶ì‡ßü‡¶æ
      const profilePicUrl = `https://graph.facebook.com/${targetID}/picture?width=512&height=512`;

      // ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ‡¶Æ
      const outPath = path.join(__dirname, `hack_${Date.now()}.png`);

      // ‡¶≤‡ßã‡¶° ‡¶á‡¶Æ‡ßá‡¶ú‡¶∏
      let avatar;
      try {
        const avatarImage = await Jimp.read(profilePicUrl);
        avatar = avatarImage.resize(350, 350);
      } catch (err) {
        // ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶ø‡¶ï ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶≤‡ßá null ‡¶∞‡ßá‡¶ñ‡ßá ‡¶¶‡¶ø‡¶¨‡ßá
        avatar = null;
      }

      // ‡¶ü‡ßá‡¶Æ‡¶™‡ßç‡¶≤‡ßá‡¶ü ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ
      const template = await Jimp.read(templateUrl);

      // ‡¶ï‡¶®‡¶∏‡ßá‡¶™‡ßç‡¶ü: template-‡¶è avatar ‡¶¨‡¶∏‡¶æ‡¶¨‡ßá ‡¶Æ‡¶æ‡¶ù‡¶ñ‡¶æ‡¶®‡ßá, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ RED "HACKED" ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™
      if (avatar) {
        // avatar ‡¶ï‡ßá template-‡¶è composite ‡¶ï‡¶∞‡ßã (‡¶™‡¶ú‡¶ø‡¶∂‡¶® template ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã)
        // ‡¶ß‡¶∞‡¶≤‡¶æ‡¶Æ template ‡¶è avatar ‡¶¨‡¶∏‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ x=120,y=120 (template ‡¶¨‡¶¶‡¶≤‡ßá adjust ‡¶ï‡¶∞‡ßã)
        avatar.resize(300, 300);
        template.composite(avatar, 120, 120);
      }

      // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™ ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
      const font = await Jimp.loadFont(Jimp.FONT_SANS_64_BLACK);
      // ‡¶≤‡¶æ‡¶≤ ‡¶™‡ßç‡¶Ø‡¶æ‡¶Å‡¶ö ‡¶¶‡¶ø‡¶≤‡ßá ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶≠‡¶æ‡¶≤‡ßã ‡¶π‡ßü ‚Äî ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶∏‡¶æ‡¶¶‡¶æ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞, ‡¶™‡¶∞‡ßá ‡¶≤‡¶æ‡¶≤ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü:
      const stampText = "HACKED";
      // ‡¶∏‡¶æ‡¶¶‡¶æ outline
      const stampX = 40;
      const stampY = template.getHeight() - 160;
      // draw thick outline by drawing text offset a few times
      const fontWhite = await Jimp.loadFont(Jimp.FONT_SANS_64_WHITE);
      template.print(fontWhite, stampX-2, stampY-2, stampText);
      template.print(fontWhite, stampX+2, stampY-2, stampText);
      template.print(fontWhite, stampX-2, stampY+2, stampText);
      template.print(fontWhite, stampX+2, stampY+2, stampText);
      // main red text
      const fontRed = await Jimp.loadFont(Jimp.FONT_SANS_64_BLACK); // black font, then colorize
      template.print(fontRed, stampX, stampY, stampText);
      // colorize that area red-ish
      // simpler: draw a semi-transparent red rectangle behind text
      template.scan(stampX-10, stampY-10, 420, 90, function(x, y, idx) {
        // add red tint
        this.bitmap.data[idx + 0] = Math.min(255, this.bitmap.data[idx + 0] + 120); // R
        // G,B unchanged to create red effect
      });

      // Save
      await template.writeAsync(outPath);

      // Send prank message + image
      const targetName = (mentions[targetID] && mentions[targetID].replace(/@/g, "")) || "Friend";
      const prankMsg = `‚ö†Ô∏è Attention! ${targetName} ‚Äî account hacked! üîí\n(‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï: hack command ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡¶æ‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶æ‡¶®‡¶ø‡¶ï ‡¶ï‡ßç‡¶∑‡¶§‡¶ø ‡¶®‡ßá‡¶á‡•§)`;

      await api.sendMessage({ body: prankMsg, attachment: fs.createReadStream(outPath) }, threadID);

      // ‡¶ï‡ßç‡¶≤‡¶ø‡¶® ‡¶Ü‡¶™
      setTimeout(() => {
        try { fs.unlinkSync(outPath); } catch (e) {}
      }, 30 * 1000);
    } catch (err) {
      console.error("Hack command error:", err);
      api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá; ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ü‡ßç‡¶∞‡¶æ‡¶á ‡¶ï‡¶∞‡ßã!", event.threadID);
    }
  },
};
