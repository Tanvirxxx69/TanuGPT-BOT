const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports = {
  config: {
    name: "nashid",
    aliases: ["nasheed", "song", "islamicsong"],
    version: "1.0",
    author: "Tanvir",
    shortDescription: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶ ‡¶∂‡ßÅ‡¶®‡ßÅ‡¶® üéµ",
    longDescription: "‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶ (nasheed) ‡¶™‡ßç‡¶≤‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶® ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá‡•§",
    category: "islamic",
  },

  onStart: async function ({ api, event, args }) {
    const baseUrl = "https://raw.githubusercontent.com/Tanvirxxx69/Islamic-Nashid-Pack/main/";
    const nashidName = args[0]?.toLowerCase();

    if (!nashidName) {
      return api.sendMessage(
        `üé∂ *‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü:*\n\n` +
          `1Ô∏è‚É£ ya_ilahi\n2Ô∏è‚É£ hasbi_rabbi\n3Ô∏è‚É£ labbaik_allahumma\n4Ô∏è‚É£ ya_adheeman\n5Ô∏è‚É£ tal_al_badru\n6Ô∏è‚É£ rahman_ya_rahman\n7Ô∏è‚É£ ya_habibi\n\n` +
          `üí° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /nashid ya_ilahi`,
        event.threadID,
        event.messageID
      );
    }

    const nashids = {
      ya_ilahi: "ya-ilahi.mp3",
      hasbi_rabbi: "hasbi-rabbi.mp3",
      labbaik_allahumma: "labbaik-allahumma.mp3",
      ya_adheeman: "ya-adheeman.mp3",
      tal_al_badru: "tal-al-badru.mp3",
      rahman_ya_rahman: "rahman-ya-rahman.mp3",
      ya_habibi: "ya-habibi.mp3",
    };

    const selectedFile = nashids[nashidName];
    if (!selectedFile) {
      return api.sendMessage(
        `‚ö†Ô∏è ‡¶è‡¶á ‡¶®‡¶æ‡¶Æ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!\n\n‚úÖ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶®‡¶æ‡¶Æ:\n${Object.keys(nashids).join(", ")}`,
        event.threadID,
        event.messageID
      );
    }

    const fileUrl = `${baseUrl}${selectedFile}`;
    const filePath = path.join(__dirname, "temp.mp3");

    try {
      const response = await axios({ url: fileUrl, responseType: "stream" });
      const writer = fs.createWriteStream(filePath);
      response.data.pipe(writer);

      writer.on("finish", () => {
        api.sendMessage(
          {
            body: `üéß ‡¶è‡¶ñ‡¶® ‡¶¨‡¶æ‡¶ú‡¶õ‡ßá: ${nashidName.replaceAll("_", " ")}`,
            attachment: fs.createReadStream(filePath),
          },
          event.threadID,
          () => fs.unlinkSync(filePath)
        );
      });
    } catch (err) {
      console.error(err);
      api.sendMessage("‚ö†Ô∏è ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID);
    }
  },
};
